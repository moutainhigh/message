package com.zhongan.icare.message.push.service;

import com.zhongan.health.common.share.bean.PageDTO;
import com.zhongan.icare.share.message.dto.PushRequestGroupDTO;
import com.zhongan.icare.share.message.dto.PushRequestLogDTO;
import org.springframework.cloud.netflix.feign.FeignClient;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import java.util.List;

@FeignClient(name = "icare-open")
@RequestMapping(path = "/int/v1/push/request/log")
public interface IPushRequestLogService {
    @RequestMapping(path = "insert",method={RequestMethod.POST})
    long insert(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "insertSelective",method={RequestMethod.POST})
    long insertSelective(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "updateByPrimaryKey",method={RequestMethod.POST})
    int updateByPrimaryKey(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "deleteByPrimaryKey",method={RequestMethod.GET})
    int deleteByPrimaryKey(@RequestParam("id") long id);

    @RequestMapping(path = "updateByPrimaryKeySelective",method={RequestMethod.POST})
    int updateByPrimaryKeySelective(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "selectByCond",method={RequestMethod.POST})
    PageDTO<PushRequestLogDTO> selectByCond(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "countByCond",method={RequestMethod.POST})
    int countByCond(@RequestBody PushRequestLogDTO dto);

    @RequestMapping(path = "selectByPrimaryKey",method={RequestMethod.GET})
    PushRequestLogDTO selectByPrimaryKey(@RequestParam("id") long id);

    /**
     * 根据会员id查询员工的所有分组消息中的最新的一条和其对应的组的信息
     * @param customerId
     * @return
     */
    @RequestMapping(path = "selectRequestGroupByCus",method={RequestMethod.GET})
    List<PushRequestGroupDTO> selectRequestGroupByCus(@RequestParam("customerId") long customerId);
}